jQuery(document).ready(function($) {
    $('.add-to-cart-button').on('click', function() {
        var productId = $(this).data('product-id');
        var quantity = 1; // You can prompt the user for quantity
        var cart = JSON.parse(localStorage.getItem('cart')) || {};

        if (cart[productId]) {
            cart[productId] += quantity; // Increase quantity if product already exists
        } else {
            cart[productId] = quantity; // Add new product
        }

        localStorage.setItem('cart', JSON.stringify(cart));
        alert('Product added to cart!');
    });
});
function my_ecommerce_save_guest_cart() {
    if (isset($_POST['cart_data'])) {
        global $wpdb;
        $table_name = $wpdb->prefix . 'cart_items';
        
        $cart_data = json_decode(stripslashes($_POST['cart_data']), true);
        $session_id = session_id(); // Unique session ID for guest users

        foreach ($cart_data as $product_id => $quantity) {
            // Check if the item already exists for this session
            $existing_item = $wpdb->get_row($wpdb->prepare(
                "SELECT * FROM $table_name WHERE session_id = %s AND product_id = %d",
                $session_id,
                $product_id
            ));

            if ($existing_item) {
                // Update quantity if item already exists
                $new_quantity = $existing_item->quantity + $quantity;
                $wpdb->update(
                    $table_name,
                    array('quantity' => $new_quantity),
                    array('id' => $existing_item->id)
                );
            } else {
                // Insert new item if it doesn't exist
                $wpdb->insert(
                    $table_name,
                    array(
                        'session_id' => $session_id,
                        'product_id' => $product_id,
                        'quantity' => $quantity
                    )
                );
            }
        }

        wp_send_json_success('Guest cart saved successfully.');
    }
}
add_action('wp_ajax_my_ecommerce_save_guest_cart', 'my_ecommerce_save_guest_cart');
add_action('wp_ajax_nopriv_my_ecommerce_save_guest_cart', 'my_ecommerce_save_guest_cart');
function my_ecommerce_display_guest_cart() {
    global $wpdb;
    $table_name = $wpdb->prefix . 'cart_items';
    $session_id = session_id(); // Use session ID for guest users

    $cart_items = $wpdb->get_results($wpdb->prepare(
        "SELECT * FROM $table_name WHERE session_id = %s",
        $session_id
    ));

    if (!empty($cart_items)) {
        foreach ($cart_items as $item) {
            $product = wc_get_product($item->product_id);
            echo '<div>' . $product->get_name() . ' - Quantity: ' . $item->quantity . '</div>';
        }
    } else {
        echo 'Your cart is empty.';
    }
}
function my_ecommerce_save_cart_data_on_checkout() {
    global $wpdb;
    $table_name = $wpdb->prefix . 'cart_items';
    $session_id = session_id(); // Use session ID for guest users

    $cart_items = $wpdb->get_results($wpdb->prepare (
        "SELECT * FROM $table_name WHERE session_id = %s",
        $session_id
    ));

    if (!empty($cart_items)) {
        foreach ($cart_items as $item) {
            // Save cart data to user's account
            $user_id = get_current_user_id();
            $wpdb->insert(
                $table_name,
                array(
                    'user_id' => $user_id,
                    'product_id' => $item->product_id,
                    'quantity' => $item->quantity
                )
            );
        }

        // Clear guest cart data
        $wpdb->query($wpdb->prepare(
            "DELETE FROM $table_name WHERE session_id = %s",
            $session_id
        ));
    }
}
add_action('woocommerce_checkout_order_processed', 'my_ecommerce_save_cart_data_on_checkout');